#include <bits/stdc++.h> 
/*

    intervals[i][0] = start point of i'th interval
    intervals[i][1] = finish point of i'th interval

*/
bool compare(vector<int>v1,vector<int>v2){
    
    return v1[0]<v2[0];
}
vector<vector<int>> mergeIntervals(vector<vector<int>> &intervals)
{
    // Write your code here.
    // for(int i=0;i<intervals.size();i++){
        
    //     intervals[i][0]=min(intervals[i][0],intervals[i][1]);
    //     intervals[i][1]=max(intervals[i][0],intervals[i][1]);
    // }
    vector<vector<int>>ans;
    sort(intervals.begin(),intervals.end(),compare);
   

    ans.push_back(intervals[0]);

    for(int i=1;i<intervals.size();i++){

        vector<int>temp=ans[ans.size()-1];
        int x=temp[0];
        int y=temp[1];
        int p=intervals[i][0];
        int q=intervals[i][1];
        if(p<=y){
          ans.pop_back();
          int b=max(y,q);
          vector<int>k{x,b};
          ans.push_back(k);
        }
        else{
            ans.push_back(intervals[i]);
        }
    }
    return ans;
}
